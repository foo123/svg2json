/**
*
*   SVG2JSON Parse SVG string or nodes into a JSON
*   https://github.com/foo123/svg2json
*	@VERSION 1.0.0
*
**/
!function(e,t,s){"use strict";"object"==typeof module&&module.exports?(module.$deps=module.$deps||{})&&(module.exports=module.$deps[t]=s.call(e)):"function"==typeof define&&define.amd&&"function"==typeof require&&"function"==typeof require.specified&&require.specified(t)?define(t,["module"],function(t){return s.moduleUri=t.uri,s.call(e)}):t in e||(e[t]=s.call(e)||1)&&"function"==typeof define&&define.amd&&define(function(){return e[t]})}("undefined"!=typeof self?self:this,"svg2json",function(t){"use strict";var s=/<!--.*?-->/m,r=/<(\/)?([a-z0-9_:\-]+)\b\s*([^<>]*)\/?>/im,i=/([a-z0-9_:\-]+)\b\s*(?:=\s*"([^"]*)")?/im,n=/[MLHVCSQTAZ]/gi,a=/(matrix|scale|rotate|translate|skewX|skewY)\s*\(([^\(\)]*)\)/im,h=/-?(?:(?:\d+\.\d+)|(?:\.\d+)|(?:\d+))/g,o=Object.prototype.hasOwnProperty,d=(Math,{});function y(t){return t.trim()}function m(t){return parseFloat(t||"")||0}function l(e){var n={"stroke-width":1,stroke:1,"stroke-opacity":1,"stroke-linecap":1,"stroke-linejoin":1,fill:1,"fill-opacity":1,"fill-rule":1},s=y(e.style?String(e.style.cssText||e.style):"").split(";").reduce(function(t,e){var e=y(e).split(":"),s=y(e[0]),e=y(e.slice(1).join(":"));return o.call(n,s)&&(t[s]=e),t},{});return Object.keys(n).forEach(function(t){o.call(e,t)&&(s[t]=e[t])}),s}function p(t){for(var e,s=y(t.transform||""),n=[];e=s.match(a);)n.push([y(e[1]).toLowerCase(),(y(e[2]).match(h)||[]).map(m)]),s=s.slice(e.index+e[0].length);return n.length?n:null}function g(t,u){u=u||[0,0];var e=(t=y(String(t))).match(n),c=t.split(n),f=[u[0],u[1]];return e?e.reduce(function(t,e,s){var n,r,i,a,o,l=e===e.toLowerCase(),p=(y(c[s+1]||"").match(h)||[]).map(m);switch(e.toUpperCase()){case"M":2<=p.length&&(f=[l?[p[0],p[1]]:[p[0]-u[0],p[1]-u[1]]],u[0]=(l?u[0]:0)+p[0],u[1]=(l?u[1]:0)+p[1],t.push({type:"Move",points:[u.slice()],pointsrel:f}),f=[u[0],u[1]]);break;case"H":for(;1<=p.length;)n=[u[0],u[1]],r=[(l?n[0]:0)+p.shift(),n[1]],u[0]=r[0],u[1]=r[1],t.push({type:"Line",points:[n,r],pointsrel:[[r[0]-n[0],r[1]-n[1]]],H:!0});break;case"V":for(;1<=p.length;)r=[(n=[u[0],u[1]])[0],(l?n[1]:0)+p.shift()],u[0]=r[0],u[1]=r[1],t.push({type:"Line",points:[n,r],pointsrel:[[r[0]-n[0],r[1]-n[1]]],V:!0});break;case"L":for(;2<=p.length;)n=[u[0],u[1]],r=[(l?n[0]:0)+p.shift(),(l?n[1]:0)+p.shift()],u[0]=r[0],u[1]=r[1],t.push({type:"Line",points:[n,r],pointsrel:[[r[0]-n[0],r[1]-n[1]]]});break;case"A":for(;7<=p.length;)o={start:null,end:null,endrel:null,radiusX:p.shift(),radiusY:p.shift(),angle:p.shift(),largeArc:p.shift(),sweep:p.shift()},n=[u[0],u[1]],r=[(l?n[0]:0)+p.shift(),(l?n[1]:0)+p.shift()],u[0]=r[0],u[1]=r[1],o.start=n,o.end=r,o.endrel=[r[0]-n[0],r[1]-n[1]],t.push({type:"Arc",params:o});break;case"Q":for(;4<=p.length;)n=[u[0],u[1]],r=[(l?n[0]:0)+p.shift(),(l?n[1]:0)+p.shift()],i=[(l?n[0]:0)+p.shift(),(l?n[1]:0)+p.shift()],u[0]=i[0],u[1]=i[1],t.push({type:"Quadratic",points:[n,r,i],pointsrel:[[r[0]-n[0],r[1]-n[1]],[i[0]-n[0],i[1]-n[1]]]});break;case"T":for(;2<=p.length;)o=t.length?t[t.length-1]:d,n=[u[0],u[1]],i=[(l?n[0]:0)+p.shift(),(l?n[1]:0)+p.shift()],r="Quadratic"===o.type?[2*n[0]-o.points[1][0],2*n[1]-o.points[1][1]]:[n[0],n[1]],u[0]=i[0],u[1]=i[1],t.push({type:"Quadratic",points:[n,r,i],pointsrel:[[r[0]-n[0],r[1]-n[1]],[i[0]-n[0],i[1]-n[1]]],T:!0});break;case"C":for(;6<=p.length;)n=[u[0],u[1]],r=[(l?n[0]:0)+p.shift(),(l?n[1]:0)+p.shift()],i=[(l?n[0]:0)+p.shift(),(l?n[1]:0)+p.shift()],a=[(l?n[0]:0)+p.shift(),(l?n[1]:0)+p.shift()],u[0]=a[0],u[1]=a[1],t.push({type:"Cubic",points:[n,r,i,a],pointsrel:[[r[0]-n[0],r[1]-n[1]],[i[0]-n[0],i[1]-n[1]],[a[0]-n[0],a[1]-n[1]]]});break;case"S":for(;4<=p.length;)o=t.length?t[t.length-1]:d,n=[u[0],u[1]],i=[(l?n[0]:0)+p.shift(),(l?n[1]:0)+p.shift()],a=[(l?n[0]:0)+p.shift(),(l?n[1]:0)+p.shift()],r="Cubic"===o.type?[2*n[0]-o.points[2][0],2*n[1]-o.points[2][1]]:[n[0],n[1]],u[0]=a[0],u[1]=a[1],t.push({type:"Cubic",points:[n,r,i,a],pointsrel:[[r[0]-n[0],r[1]-n[1]],[i[0]-n[0],i[1]-n[1]],[a[0]-n[0],a[1]-n[1]]],S:!0});break;case"Z":n=[u[0],u[1]],r=[f[0],f[1]],u[0]=r[0],u[1]=r[1],f=[u[0],u[1]],t.push({type:"Line",points:[n,r],pointsrel:[[r[0]-n[0],r[1]-n[1]]],Z:!0})}return t},[]):[]}function b(t,e){var s,n;if(!e||!e.parsed)return t.tagName&&t.children?((n=function(t){var e,s,n={};if(t.attributes)for(e=0,s=t.attributes.length;e<s;++e)n[t.attributes[e].name.toLowerCase()]=t.attributes[e].value;return n}(t)).style=l(n),n.transform=p(n),e.parsed=!0,{tag:t.tagName.toLowerCase(),atts:n,children:t.children}):!t.nodeType&&(s=e.index||0,t=(t=t.slice(s)).match(r))?(e.index=s+t.index+t[0].length,"/"===t[1]?{tag:t[2].toLowerCase(),end:!0}:((n=function(t){for(var e,s={};e=t.match(i);)s[e[1].toLowerCase()]=!e[2]||y(e[2]),t=t.slice(e.index+e[0].length);return s}(t[3])).style=l(n),n.transform=p(n),{tag:t[2].toLowerCase(),atts:n})):void 0}function e(t){return t?function s(t,e,n,r){r=r||[0,0];for(var i,a,o,l,p,u,c=[],f=n?1:0;i=b(t,e);)switch(i.tag){case"line":i.end||(u=[[m(i.atts.x1),m(i.atts.y1)],[m(i.atts.x2),m(i.atts.y2)]],r[0]=u[1][0],r[1]=u[1][1],c.push({type:"Line",style:i.atts.style,transform:i.atts.transform,points:u,pointsrel:u.slice(1).map(function(t){return[t[0]-u[0][0],t[1]-u[0][1]]})}));break;case"polyline":i.end||(u=((i.atts.points||"").match(h)||[]).map(m).reduce(function(t,e,s){return s%2?t[(s-1)/2][1]=e:t.push([e,0]),t},[]),r[0]=u[u.length-1][0],r[1]=u[u.length-1][1],c.push({type:"Polyline",style:i.atts.style,transform:i.atts.transform,points:u,pointsrel:u.slice(1).map(function(t){return[t[0]-u[0][0],t[1]-u[0][1]]})}));break;case"polygon":i.end||(u=((i.atts.points||"").match(h)||[]).map(m).reduce(function(t,e,s){return s%2?t[(s-1)/2][1]=e:t.push([e,0]),t},[]),r[0]=u[0][0],r[1]=u[0][1],c.push({type:"Polygon",style:i.atts.style,transform:i.atts.transform,points:u,pointsrel:u.slice(1).map(function(t){return[t[0]-u[0][0],t[1]-u[0][1]]})}));break;case"rect":i.end||(a=m(i.atts.x),o=m(i.atts.y),l=m(i.atts.width),p=m(i.atts.height),u=[[a,o],[a+l,o],[a+l,o+p],[a,o+p]],r[0]=u[0][0],r[1]=u[0][1],c.push({type:"Polygon",style:i.atts.style,transform:i.atts.transform,rect:[a,o,l,p],points:u,pointsrel:u.slice(1).map(function(t){return[t[0]-u[0][0],t[1]-u[0][1]]})}));break;case"circle":i.end||c.push({type:"Circle",style:i.atts.style,transform:i.atts.transform,center:[m(i.atts.cx),m(i.atts.cy)],radius:m(i.atts.r)});break;case"ellipse":i.end||c.push({type:"Ellipse",style:i.atts.style,transform:i.atts.transform,center:[m(i.atts.cx),m(i.atts.cy)],radiusX:m(i.atts.rx),radiusY:m(i.atts.ry),angle:0});break;case"path":i.end||c.push({type:"Path",style:i.atts.style,transform:i.atts.transform,d:g(i.atts.d||"",r)});break;case"g":if(i.end){if("g"===n&&0==--f)return c}else"g"===n&&++f,c.push({type:"Group",style:i.atts.style,transform:i.atts.transform,nodes:i.children?[].reduce.call(i.children,function(t,e){return t.push.apply(t,s(e,{index:0},"g",r)),t},[]):s(t,e,"g",r)});break;case"svg":if(i.end){if("svg"===n&&0==--f)return c}else"svg"===n&&++f,c.push({type:"SVG",viewBox:i.atts.viewbox?(i.atts.viewbox.match(h)||[]).map(m):null,width:i.atts.width||null,height:i.atts.height||null,nodes:i.children?[].reduce.call(i.children,function(t,e){return t.push.apply(t,s(e,{index:0},"svg")),t},[]):s(t,e,"svg")})}return c}(t.tagName?t:function(t){for(var e;e=t.match(s);)t=t.slice(0,e.index)+t.slice(e.index+e[0].length);return t}(y(String(t))),{index:0}):[]}return e.parsePath=g,e.VERSION="1.0.0",e});