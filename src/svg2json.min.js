/**
*
*   SVG2JSON Parse SVG string or nodes into a JSON
*   https://github.com/foo123/svg2json
*   @VERSION 1.0.1
*
**/
!function(e,t,n){"use strict";"object"==typeof module&&module.exports?(module.$deps=module.$deps||{})&&(module.exports=module.$deps[t]=n.call(e)):"function"==typeof define&&define.amd&&"function"==typeof require&&"function"==typeof require.specified&&require.specified(t)?define(t,["module"],function(t){return n.moduleUri=t.uri,n.call(e)}):t in e||(e[t]=n.call(e)||1)&&"function"==typeof define&&define.amd&&define(function(){return e[t]})}("undefined"!=typeof self?self:this,"svg2json",function(t){"use strict";var n=/<!--.*?-->/m,r=/<(\/)?([a-z0-9_:\-]+)\b\s*([^<>]*)\/?>/im,i=/([a-z0-9_:\-]+)\b\s*(?:=\s*"([^"]*)")?/im,s=/[MLHVCSQTAZ]/gi,l=/(matrix|scale|rotate|translate|skewX|skewY)\s*\(([^\(\)]*)\)/im,f=/-?(?:(?:\d+\.\d+)|(?:\.\d+)|(?:\d+))/g,a=Object.prototype.hasOwnProperty,d=(Math,{});function g(t){return t.trim()}function y(t){return parseFloat(t||"")||0}function o(e){var s={"stroke-width":1,stroke:1,"stroke-opacity":1,"stroke-linecap":1,"stroke-linejoin":1,fill:1,"fill-opacity":1,"fill-rule":1},n=g(e.style?String(e.style.cssText||e.style):"").split(";").reduce(function(t,e){var e=g(e).split(":"),n=g(e[0]),e=g(e.slice(1).join(":"));return a.call(s,n)&&(t[n]=e),t},{});return Object.keys(s).forEach(function(t){a.call(e,t)&&(n[t]=e[t])}),n}function p(t){for(var e,n=g(t.transform||""),s=[];e=n.match(l);)s.push([g(e[1]).toLowerCase(),(g(e[2]).match(f)||[]).map(y)]),n=n.slice(e.index+e[0].length);return s.length?s:null}function m(t,h){h=h||[0,0];var e=(t=g(String(t))).match(s),u=t.split(s),c=[h[0],h[1]];return e?e.reduce(function(t,e,n){var s,r,i,l,a,o=e===e.toLowerCase(),p=(g(u[n+1]||"").match(f)||[]).map(y);switch(e.toUpperCase()){case"M":2<=p.length&&(c=[o?[p[0],p[1]]:[p[0]-h[0],p[1]-h[1]]],h[0]=(o?h[0]:0)+p[0],h[1]=(o?h[1]:0)+p[1],t.push({type:"Move",points:[h.slice()],pointsrel:c}),c=[h[0],h[1]]);break;case"H":for(;1<=p.length;)s=[h[0],h[1]],r=[(o?s[0]:0)+p.shift(),s[1]],h[0]=r[0],h[1]=r[1],!t.length||"Line"!==t[t.length-1].type&&"Polyline"!==t[t.length-1].type||t[t.length-1].Z?t.push({type:"Line",points:[s,r],pointsrel:[[r[0]-s[0],r[1]-s[1]]],H:!0}):(t[t.length-1].type="Polyline",t[t.length-1].points.push(r),t[t.length-1].pointsrel.push([r[0]-s[0],r[1]-s[1]]),t[t.length-1].H&&delete t[t.length-1].H,t[t.length-1].V&&delete t[t.length-1].V);break;case"V":for(;1<=p.length;)r=[(s=[h[0],h[1]])[0],(o?s[1]:0)+p.shift()],h[0]=r[0],h[1]=r[1],!t.length||"Line"!==t[t.length-1].type&&"Polyline"!==t[t.length-1].type||t[t.length-1].Z?t.push({type:"Line",points:[s,r],pointsrel:[[r[0]-s[0],r[1]-s[1]]],V:!0}):(t[t.length-1].type="Polyline",t[t.length-1].points.push(r),t[t.length-1].pointsrel.push([r[0]-s[0],r[1]-s[1]]),t[t.length-1].H&&delete t[t.length-1].H,t[t.length-1].V&&delete t[t.length-1].V);break;case"L":for(;2<=p.length;)s=[h[0],h[1]],r=[(o?s[0]:0)+p.shift(),(o?s[1]:0)+p.shift()],h[0]=r[0],h[1]=r[1],!t.length||"Line"!==t[t.length-1].type&&"Polyline"!==t[t.length-1].type||t[t.length-1].Z?t.push({type:"Line",points:[s,r],pointsrel:[[r[0]-s[0],r[1]-s[1]]]}):(t[t.length-1].type="Polyline",t[t.length-1].points.push(r),t[t.length-1].pointsrel.push([r[0]-s[0],r[1]-s[1]]),t[t.length-1].H&&delete t[t.length-1].H,t[t.length-1].V&&delete t[t.length-1].V);break;case"A":for(;7<=p.length;)a={start:null,end:null,endrel:null,radiusX:p.shift(),radiusY:p.shift(),angle:p.shift(),largeArc:p.shift(),sweep:p.shift()},s=[h[0],h[1]],r=[(o?s[0]:0)+p.shift(),(o?s[1]:0)+p.shift()],h[0]=r[0],h[1]=r[1],a.start=s,a.end=r,a.endrel=[r[0]-s[0],r[1]-s[1]],t.push({type:"Arc",params:a});break;case"Q":for(;4<=p.length;)s=[h[0],h[1]],r=[(o?s[0]:0)+p.shift(),(o?s[1]:0)+p.shift()],i=[(o?s[0]:0)+p.shift(),(o?s[1]:0)+p.shift()],h[0]=i[0],h[1]=i[1],t.push({type:"Quadratic",points:[s,r,i],pointsrel:[[r[0]-s[0],r[1]-s[1]],[i[0]-s[0],i[1]-s[1]]]});break;case"T":for(;2<=p.length;)a=t.length?t[t.length-1]:d,s=[h[0],h[1]],i=[(o?s[0]:0)+p.shift(),(o?s[1]:0)+p.shift()],r="Quadratic"===a.type?[2*s[0]-a.points[1][0],2*s[1]-a.points[1][1]]:[s[0],s[1]],h[0]=i[0],h[1]=i[1],t.push({type:"Quadratic",points:[s,r,i],pointsrel:[[r[0]-s[0],r[1]-s[1]],[i[0]-s[0],i[1]-s[1]]],T:!0});break;case"C":for(;6<=p.length;)s=[h[0],h[1]],r=[(o?s[0]:0)+p.shift(),(o?s[1]:0)+p.shift()],i=[(o?s[0]:0)+p.shift(),(o?s[1]:0)+p.shift()],l=[(o?s[0]:0)+p.shift(),(o?s[1]:0)+p.shift()],h[0]=l[0],h[1]=l[1],t.push({type:"Cubic",points:[s,r,i,l],pointsrel:[[r[0]-s[0],r[1]-s[1]],[i[0]-s[0],i[1]-s[1]],[l[0]-s[0],l[1]-s[1]]]});break;case"S":for(;4<=p.length;)a=t.length?t[t.length-1]:d,s=[h[0],h[1]],i=[(o?s[0]:0)+p.shift(),(o?s[1]:0)+p.shift()],l=[(o?s[0]:0)+p.shift(),(o?s[1]:0)+p.shift()],r="Cubic"===a.type?[2*s[0]-a.points[2][0],2*s[1]-a.points[2][1]]:[s[0],s[1]],h[0]=l[0],h[1]=l[1],t.push({type:"Cubic",points:[s,r,i,l],pointsrel:[[r[0]-s[0],r[1]-s[1]],[i[0]-s[0],i[1]-s[1]],[l[0]-s[0],l[1]-s[1]]],S:!0});break;case"Z":s=[h[0],h[1]],r=[c[0],c[1]],h[0]=r[0],h[1]=r[1],c=[h[0],h[1]],t.push({type:"Line",points:[s,r],pointsrel:[[r[0]-s[0],r[1]-s[1]]],Z:!0})}return t},[]):[]}function b(t,e){var n,s;if(!e||!e.parsed)return t.tagName&&t.children?((s=function(t){var e,n,s={};if(t.attributes)for(e=0,n=t.attributes.length;e<n;++e)s[t.attributes[e].name.toLowerCase()]=t.attributes[e].value;return s}(t)).style=o(s),s.transform=p(s),e.parsed=!0,{tag:t.tagName.toLowerCase(),atts:s,children:t.children}):!t.nodeType&&(n=e.index||0,t=(t=t.slice(n)).match(r))?(e.index=n+t.index+t[0].length,"/"===t[1]?{tag:t[2].toLowerCase(),end:!0}:((s=function(t){for(var e,n={};e=t.match(i);)n[e[1].toLowerCase()]=!e[2]||g(e[2]),t=t.slice(e.index+e[0].length);return n}(t[3])).style=o(s),s.transform=p(s),{tag:t[2].toLowerCase(),atts:s})):void 0}function e(t){return t?function n(t,e,s,r){r=r||[0,0];for(var i,l,a,o,p,h,u=[],c=s?1:0;i=b(t,e);)switch(i.tag){case"line":i.end||(h=[[y(i.atts.x1),y(i.atts.y1)],[y(i.atts.x2),y(i.atts.y2)]],r[0]=h[1][0],r[1]=h[1][1],u.push({type:"Line",style:i.atts.style,transform:i.atts.transform,points:h,pointsrel:h.slice(1).map(function(t){return[t[0]-h[0][0],t[1]-h[0][1]]})}));break;case"polyline":i.end||(h=((i.atts.points||"").match(f)||[]).map(y).reduce(function(t,e,n){return n%2?t[(n-1)/2][1]=e:t.push([e,0]),t},[]),r[0]=h[h.length-1][0],r[1]=h[h.length-1][1],u.push({type:"Polyline",style:i.atts.style,transform:i.atts.transform,points:h,pointsrel:h.slice(1).map(function(t){return[t[0]-h[0][0],t[1]-h[0][1]]})}));break;case"polygon":i.end||(h=((i.atts.points||"").match(f)||[]).map(y).reduce(function(t,e,n){return n%2?t[(n-1)/2][1]=e:t.push([e,0]),t},[]),r[0]=h[0][0],r[1]=h[0][1],u.push({type:"Polygon",style:i.atts.style,transform:i.atts.transform,points:h,pointsrel:h.slice(1).map(function(t){return[t[0]-h[0][0],t[1]-h[0][1]]})}));break;case"rect":i.end||(l=y(i.atts.x),a=y(i.atts.y),o=y(i.atts.width),p=y(i.atts.height),h=[[l,a],[l+o,a],[l+o,a+p],[l,a+p]],r[0]=h[0][0],r[1]=h[0][1],u.push({type:"Polygon",style:i.atts.style,transform:i.atts.transform,rect:[l,a,o,p],points:h,pointsrel:h.slice(1).map(function(t){return[t[0]-h[0][0],t[1]-h[0][1]]})}));break;case"circle":i.end||u.push({type:"Circle",style:i.atts.style,transform:i.atts.transform,center:[y(i.atts.cx),y(i.atts.cy)],radius:y(i.atts.r)});break;case"ellipse":i.end||u.push({type:"Ellipse",style:i.atts.style,transform:i.atts.transform,center:[y(i.atts.cx),y(i.atts.cy)],radiusX:y(i.atts.rx),radiusY:y(i.atts.ry),angle:0});break;case"path":i.end||u.push({type:"Path",style:i.atts.style,transform:i.atts.transform,d:m(i.atts.d||"",r)});break;case"g":if(i.end){if("g"===s&&0==--c)return u}else"g"===s&&++c,u.push({type:"Group",style:i.atts.style,transform:i.atts.transform,nodes:i.children?[].reduce.call(i.children,function(t,e){return t.push.apply(t,n(e,{index:0},"g",r)),t},[]):n(t,e,"g",r)});break;case"svg":if(i.end){if("svg"===s&&0==--c)return u}else"svg"===s&&++c,u.push({type:"SVG",viewBox:i.atts.viewbox?(i.atts.viewbox.match(f)||[]).map(y):null,width:i.atts.width||null,height:i.atts.height||null,nodes:i.children?[].reduce.call(i.children,function(t,e){return t.push.apply(t,n(e,{index:0},"svg")),t},[]):n(t,e,"svg")})}return u}(t.tagName?t:function(t){for(var e;e=t.match(n);)t=t.slice(0,e.index)+t.slice(e.index+e[0].length);return t}(g(String(t))),{index:0}):[]}return e.parsePath=m,e.VERSION="1.0.1",e});